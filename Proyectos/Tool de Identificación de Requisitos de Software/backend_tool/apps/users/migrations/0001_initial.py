# Generated by Django 2.2.3 on 2020-07-28 04:36

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='correo electronico')),
                ('first_name', models.CharField(max_length=100, verbose_name='nombres')),
                ('last_name', models.CharField(max_length=100, verbose_name='apellidos')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='user', verbose_name='foto')),
                ('address', models.CharField(blank=True, max_length=200, null=True, verbose_name='direccion')),
                ('enterprise_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='nombre de empresa')),
                ('dni', models.CharField(blank=True, max_length=8, null=True, verbose_name='dni')),
                ('phone', models.CharField(blank=True, max_length=30, null=True, verbose_name='celular')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='Habilitar Usuario')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
        ),
    ]
